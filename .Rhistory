# d) sex dim = 0
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="d) Sexual dimorphism = 1 (monomorphic)", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.mono[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# e) sex dim = 1
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="e) Sexual dimorphism = +1SD (males larger)", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.dim[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
par(mfrow=c(2,3))
# a) intercept only model
dens(p.m4a.nd[[1]][,1], xlab="Predicted probability", ylab="Density", main="a) No covariates", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m1[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m1[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m1[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# mtext("a)", cex=1.5, adj=0)
# b) food = not defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="b) Food = non-defensible", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.nd[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# c) food = defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="c) Food = defensible", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.d[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# d) sex dim = 0
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="d) Sexual monomorphism", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.mono[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# e) sex dim = 1
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="e) Sexual dimorphism (+1SD)", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.dim[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
names(post_m4b)[1:10]
# neither sex
{    K <- 3 #number of character states used
ns <- nrow(post_m4b)
n <- 1
softmax2 <- function(x) {
x <- max(x) - x
exp(-x)/sum(exp(-x))
}
p.m4c.mono <- list()
for ( i in 1:n ) {
p.m4b.N[[i]] <- sapply( 1:K , function(k) {
if ( k < K ) {
ptemp <- post_m4b[,k] # intercept only = monomorphic
} else {
ptemp <- rep(0,ns)
}
return(ptemp)
})
## The values are converted to probabilities using the softmax function
## which ensures that the predicted values across categories sum to
## 100% probabilities.
for ( s in 1:ns ) p.m4b.N[[i]][s,] <- softmax2( p.m4b.N[[i]][s,] )
}
}
{    K <- 3 #number of character states used
ns <- nrow(post_m4b)
n <- 1
softmax2 <- function(x) {
x <- max(x) - x
exp(-x)/sum(exp(-x))
}
p.m4b.N <- list()
for ( i in 1:n ) {
p.m4b.N[[i]] <- sapply( 1:K , function(k) {
if ( k < K ) {
ptemp <- post_m4b[,k] # intercept only = monomorphic
} else {
ptemp <- rep(0,ns)
}
return(ptemp)
})
## The values are converted to probabilities using the softmax function
## which ensures that the predicted values across categories sum to
## 100% probabilities.
for ( s in 1:ns ) p.m4b.N[[i]][s,] <- softmax2( p.m4b.N[[i]][s,] )
}
}
{    K <- 3 #number of character states used
ns <- nrow(post_m4b)
n <- 1
softmax2 <- function(x) {
x <- max(x) - x
exp(-x)/sum(exp(-x))
}
p.m4b.B <- list()
for ( i in 1:n ) {
p.m4b.B[[i]] <- sapply( 1:K , function(k) {
if ( k < K ) {
ptemp <- post_m4b[,k] + post_m4b[,k*3] # intercept + philo = B
} else {
ptemp <- rep(0,ns)
}
return(ptemp)
})
## The values are converted to probabilities using the softmax function
## which ensures that the predicted values across categories sum to
## 100% probabilities.
for ( s in 1:ns ) p.m4b.B[[i]][s,] <- softmax2( p.m4b.B[[i]][s,] )
}
}
colMeans(p.m4b.N[[1]]) # quick check if reasonable
colMeans(p.m4b.B[[1]]) # quick check if reasonable
names(post_m4b)[1:10]
k<- 1
k*4-(k-1)
k<- 2
k*4-(k-1)
{    K <- 3 #number of character states used
ns <- nrow(post_m4b)
n <- 1
softmax2 <- function(x) {
x <- max(x) - x
exp(-x)/sum(exp(-x))
}
p.m4b.F <- list()
for ( i in 1:n ) {
p.m4b.F[[i]] <- sapply( 1:K , function(k) {
if ( k < K ) {
ptemp <- post_m4b[,k] + post_m4b[,k*4-(k-1)] # intercept + philo = F [columns 4 and 7]
} else {
ptemp <- rep(0,ns)
}
return(ptemp)
})
## The values are converted to probabilities using the softmax function
## which ensures that the predicted values across categories sum to
## 100% probabilities.
for ( s in 1:ns ) p.m4b.F[[i]][s,] <- softmax2( p.m4b.F[[i]][s,] )
}
}
colMeans(p.m4b.F[[1]]) # quick check if reasonable
names(post_m4b)[1:10]
k+5+(k-1)
k<- 1
k+5+(k-1)
k+(1+k)*2
k<-2
k+(1+k)*2
k+2*(k+1)
k<-1
k+2*(k+1)
{    K <- 3 #number of character states used
ns <- nrow(post_m4b)
n <- 1
softmax2 <- function(x) {
x <- max(x) - x
exp(-x)/sum(exp(-x))
}
p.m4b.M <- list()
for ( i in 1:n ) {
p.m4b.M[[i]] <- sapply( 1:K , function(k) {
if ( k < K ) {
ptemp <- post_m4b[,k] + post_m4b[,k+2*(k+1)] # intercept + philo = F [columns 5 and 8]
} else {
ptemp <- rep(0,ns)
}
return(ptemp)
})
## The values are converted to probabilities using the softmax function
## which ensures that the predicted values across categories sum to
## 100% probabilities.
for ( s in 1:ns ) p.m4b.M[[i]][s,] <- softmax2( p.m4b.M[[i]][s,] )
}
}
colMeans(p.m4b.M[[1]]) # quick check if reasonable
## 3 x 3 figure panel
par(mfrow=c(3,3))
# a) intercept only model
dens(p.m4a.nd[[1]][,1], xlab="Predicted probability", ylab="Density", main="a) No covariates", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m1[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m1[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m1[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# mtext("a)", cex=1.5, adj=0)
# b) food = not defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="b) Food = non-defensible", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.nd[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# c) food = defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="c) Food = defensible", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.d[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# d) sex dim = 0
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="d) Monomorphic", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.mono[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# e) sex dim = 1
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="e) Dimorphic (+1SD)", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.dim[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# f) philo = N
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="f) Philopatry = Neither", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.N[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# g) philo = F
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="g) Philopatry = Females", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.F[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# h) philo = M
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="h) Philopatry = Males", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.M[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# i) philo = B
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="i) Philopatry = Both", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.B[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
colMeans(p.m4c.mono[[1]]) # quick check if reasonable
{    K <- 3 #number of character states used
ns <- nrow(post_m4c)
n <- 1
softmax2 <- function(x) {
x <- max(x) - x
exp(-x)/sum(exp(-x))
}
p.m4c.mono <- list()
for ( i in 1:n ) {
p.m4c.mono[[i]] <- sapply( 1:K , function(k) {
if ( k < K ) {
ptemp <- post_m4c[,k] # intercept only = monomorphic
} else {
ptemp <- rep(0,ns)
}
return(ptemp)
})
## The values are converted to probabilities using the softmax function
## which ensures that the predicted values across categories sum to
## 100% probabilities.
for ( s in 1:ns ) p.m4c.mono[[i]][s,] <- softmax2( p.m4c.mono[[i]][s,] )
}
}
colMeans(p.m4c.mono[[1]]) # quick check if reasonable
## 3 x 3 figure panel
par(mfrow=c(3,3))
# a) intercept only model
dens(p.m4a.nd[[1]][,1], xlab="Predicted probability", ylab="Density", main="a) No covariates", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m1[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m1[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m1[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# mtext("a)", cex=1.5, adj=0)
# b) food = not defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="b) Food = non-defensible", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.nd[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# c) food = defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="c) Food = defensible", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.d[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# d) sex dim = 0
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="d) Monomorphic", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.mono[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# e) sex dim = 1
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="e) Dimorphic (+1SD)", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.dim[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# f) philo = N
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="f) Philopatry = Neither", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.N[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# g) philo = F
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="g) Philopatry = Females", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.F[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# h) philo = M
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="h) Philopatry = Males", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.M[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# i) philo = B
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="i) Philopatry = Both", col="white", ylim=c(0,3.5), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.B[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
## 3 x 3 figure panel
par(mfrow=c(3,3))
# a) intercept only model
dens(p.m4a.nd[[1]][,1], xlab="Predicted probability", ylab="Density", main="a) No covariates", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m1[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m1[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m1[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# mtext("a)", cex=1.5, adj=0)
# b) food = not defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="b) Food = non-defensible", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.nd[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# c) food = defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="c) Food = defensible", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.d[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# d) sex dim = 0
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="d) Monomorphic", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.mono[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# e) sex dim = 1
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="e) Dimorphic (+1SD)", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.dim[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# f) philo = N
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="f) Philopatry = Neither", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.N[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# g) philo = F
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="g) Philopatry = Females", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.F[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# h) philo = M
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="h) Philopatry = Males", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.M[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# i) philo = B
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="i) Philopatry = Both", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.B[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
tiff("Figure X.tif", compression = "lzw",
height = 12.0, width = 12.0, units = "cm", res = 600, pointsize = 5)
# 3 x 3 figure panel
par(mfrow=c(3,3))
# a) intercept only model
dens(p.m4a.nd[[1]][,1], xlab="Predicted probability", ylab="Density", main="a) No covariates", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m1[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m1[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m1[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# mtext("a)", cex=1.5, adj=0)
# b) food = not defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="b) Food = non-defensible", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.nd[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# c) food = defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="c) Food = defensible", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.d[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# d) sex dim = 0
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="d) Monomorphic", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.mono[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# e) sex dim = 1
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="e) Dimorphic (+1SD)", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.dim[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# f) philo = N
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="f) Philopatry = Neither", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.N[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# g) philo = F
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="g) Philopatry = Females", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.F[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# h) philo = M
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="h) Philopatry = Males", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.M[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# i) philo = B
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="i) Philopatry = Both", col="white", ylim=c(0,3), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.B[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
dev.off()
colorblind.friendly(Egypt)
colorblind.friendly("Egypt")
tiff("Figure X.tif", compression = "lzw",
height = 12.0, width = 12.0, units = "cm", res = 600, pointsize = 5)
# 3 x 3 figure panel
par(mfrow=c(3,3))
# a) intercept only model
dens(p.m4a.nd[[1]][,1], xlab="Predicted probability", ylab="Density", main="a) No covariates", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m1[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m1[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m1[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# mtext("a)", cex=1.5, adj=0)
# b) food = not defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="b) Food = non-defensible", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.nd[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# c) food = defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="c) Food = defensible", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.d[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# d) sex dim = 0
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="d) Monomorphic", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.mono[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# e) sex dim = 1
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="e) Dimorphic (+1SD)", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.dim[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# f) philo = N
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="f) Philopatry = Neither", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.N[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# g) philo = F
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="g) Philopatry = Females", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.F[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# h) philo = M
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="h) Philopatry = Males", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.M[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
# i) philo = B
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="i) Philopatry = Both", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.B[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
dev.off()
tiff("Figure X.tif", compression = "lzw",
height = 12.0, width = 12.0, units = "cm", res = 600, pointsize = 5)
# 3 x 3 figure panel
par(mfrow=c(3,3))
# a) intercept only model
dens(p.m4a.nd[[1]][,1], xlab="Predicted probability", ylab="Density", main="a) No covariates", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m1[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m1[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m1[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# mtext("a)", cex=1.5, adj=0)
# b) food = not defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="b) Food = non-defensible", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.nd[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.nd[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# c) food = defensible
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="c) Food = defensible", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4a.d[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4a.d[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# d) sex dim = 0
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="d) Monomorphic", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.mono[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.mono[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# e) sex dim = 1
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="e) Dimorphic (+1SD)", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4c.dim[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4c.dim[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# f) philo = N
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="f) Philopatry = Neither", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.N[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.N[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# g) philo = F
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="g) Philopatry = Females", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.F[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.F[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# h) philo = M
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="h) Philopatry = Males", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.M[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.M[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
# i) philo = B
dens(p.m1[[1]][,1], xlab="Predicted probability", ylab="Density", main="i) Philopatry = Both", col="white", ylim=c(0,3), xlim=c(0,1), cex.main=1.5, cex.axis=1.2, cex.lab=1.2)
polygon(density(p.m4b.B[[1]][,1]), col=adjustcolor(col.female, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,2]), col=adjustcolor(col.male, alpha.f=0.5))
polygon(density(p.m4b.B[[1]][,3]), col=adjustcolor(col.both, alpha.f=0.5))
legend("topright", fill=c(adjustcolor(col.female, alpha.f=0.5), adjustcolor(col.male, alpha.f=0.5), adjustcolor(col.both, alpha.f=0.5)), border="black", legend=c("Females only", "Males only", "Both sexes"), bty="n", cex=1.5)
dev.off()
